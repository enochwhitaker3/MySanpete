@page "/add-business/{Success}"
@page "/add-business"

@using RazorClassLibrary.Data
@using RazorClassLibrary.Requests
@using RazorClassLibrary.Services

@inject IBusinessService businessService
@inject NavigationManager navManager
@attribute [Authorize(Roles = "Admin")]

<div class="form-container">
    <h3>Admin Add Business</h3>
    <div class="form-group mt-5">
        <label for="title">Name</label>
        <input id="title" class="form-control" @bind="Name" required />
    </div>
    <div class="form-group mt-5">
        <label for="title">Address</label>
        <input id="title" class="form-control" @bind="Address" required />
    </div>
    <div class="form-group mt-5">
        <label for="email">Email</label>
        <input id="email" class="form-control" type="email" placeholder="email@email.com" @bind="Email" required />
    </div>
    <div class="form-group mt-5">
        <label for="title">Phone Number (Format like ***-***-****)</label>
        <input id="phone" class="form-control" type="tel" pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" placeholder="888-888-8888" @bind="PhoneNum" required />
    </div>
    <div class="form-group mt-5">
        <label for="title">Website URL</label>
        <input id="website" class="form-control" @bind="WebURL" required />
    </div>
    <div class="form-group">
        <label for="photo">Photo</label>
        <InputFile OnChange="SaveFile"></InputFile>
    </div>
    @if (errorMessage == "")
    {
        <button type="submit" class="btn btn-primary" @onclick="CreateNewBusiness">Submit</button>
    }
    else
    {
        <div class="alert alert-danger">
            <p>Please fix the error to submit the form</p>
            <p>@errorMessage</p>
            <button type="submit" class="btn btn-primary" @onclick="CreateNewBusiness">Submit</button>
        </div>
    }

    @if (Success == "true")
    {
        <div class="alert-success alert alert-dismissible fade show" role="alert" @onclick="ChangeSuccess">
            <p>You successfully added the new business!</p>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

</div>

@code {
    public AddBusinessRequest? newBusiness = new();

    public string errorMessage = "";
    [Parameter]
    public string? Success { get; set; }

    public string? Name { get; set; } = "Default Name";
    public string? Address { get; set; } = "Default Address";
    public string? Email { get; set; } = "Deafault Email";
    public byte[]? ImageBytes { get; set; }
    public string? PhoneNum { get; set; }
    public string? WebURL { get; set; } = "Default URL";


    protected override void OnInitialized()
    {

    }

    public async Task SaveFile(InputFileChangeEventArgs e)
    {
        IBrowserFile file = e.GetMultipleFiles(1).Single();

        using (var ms = new MemoryStream())
        {
            await file.OpenReadStream().CopyToAsync(ms);
            ImageBytes = ms.ToArray();
        }
    }

    public async Task CreateNewBusiness()
    {
        try
        {
            if (Name is null || Name == "Default Name")
            {
                throw new Exception("The business needs to have a name");
            }

            if (Address is null || Address == "Default Address")
            {
                throw new Exception("The business needs to have an address");
            }

            if (WebURL is null || WebURL == "Default URL")
            {
                throw new Exception("You need to give a link to the business website");
            }

            if (PhoneNum is null || PhoneNum.Length < 12 || PhoneNum.Length > 12)
            {
                throw new Exception("The phone number is not in the correct format");
            }

            if (ImageBytes is not null)
            {
                newBusiness = new AddBusinessRequest()
                {
                    Name = Name,
                    Address = Address,
                    Email = Email,
                    PhoneNum = PhoneNum,
                    WebURL = WebURL,
                    Logo = ImageBytes
                };

            }
            else
            {
                newBusiness = new AddBusinessRequest()
                {
                    Name = Name,
                    Address = Address,
                    Email = Email,
                    PhoneNum = PhoneNum,
                    WebURL = WebURL,
                };

            }

            try
            {
                if (newBusiness != null)
                {
                    await businessService.AddBusiness(newBusiness);

                    Success = "true";
                    ReloadPage();
                }
                else
                {
                    throw new Exception("Whoops something didn't work right");
                }
            }
            catch (Exception ex)
            {
                // Handle errors appropriately
                errorMessage = ex.Message;
            }
        }
        catch (Exception ex)
        {
            // Handle errors appropriately
            errorMessage = ex.Message;
        }

        
    }

    public void ReloadPage()
    {
        navManager.NavigateTo($"/add-business/{Success}", true);
    }

    public void ChangeSuccess()
    {
        Success = "false";
    }
}