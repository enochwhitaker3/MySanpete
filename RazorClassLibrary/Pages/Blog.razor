@using Microsoft.AspNetCore.Components.Authorization
@using RazorClassLibrary.DTOs
@using Blazored.TextEditor
@using RazorClassLibrary.Requests


@inject IBlogService service;
@inject ICommentService commentService;
@inject IUserService userService;
@inject IUserState userState


<div class="mt-5 p-4" style="max-width: 800px; margin-left: auto; margin-right: auto; padding-top: 100px;">
    @if (blog is not null && blog.Content is not null)
    {
        <h1>@blog.Title</h1>
        <p style="color: gray;" class="mb-5">
            published @blog.PublishDate.Value.Month - @blog.PublishDate.Value.Day - @blog.PublishDate.Value.Year
        </p>
        <div class="blog-content">
            @((MarkupString)blog.Content)
        </div>

        <div class="d-flex align-items-center justify-content-center" style="margin-top: 10vh;">
            <div class="container">
                <div class="row justify-content-center mb-4">
                    <div class="col-lg-10">
                        <h5>@AllComments.Count() Comments</h5>
                    </div>
                </div>
                @if (AllComments.Count() > 0)
                {
                    <div class="row justify-content-center mb-4">
                        <div class="col-lg-10">
                            <div class="comments">

                                @foreach (var c in TopLevelComments)
                                {
                                    <div class="comment d-flex mb-5">
                                        <div class="flex-shrink-0">
                                            <div class="avatar avatar-sm rounded-circle">
                                                <img class="avatar-img" src="https://randomuser.me/api/portraits/men/32.jpg" alt="">
                                            </div>
                                        </div>
                                        <div class="flex-grow-1 ms-2 ms-sm-3">

                                            <div class="comment-meta d-flex align-items-baseline">
                                                <h6 class="me-2">@c.UserName</h6>
                                            </div>
                                            <div class="comment-body">
                                                @c.Content
                                            </div>
                                            <div class="row justify-content-center mb-5">
                                                @if (user is not null)
                                                {
                                                    <a data-toggle="collapse" href="@("#collapseExample" + c.Id)" role="button" aria-expanded="false" aria-controls="@("collapseExample" + c.Id)" class="reply-btn">
                                                        Reply
                                                    </a>
                                                }
                                                <!-- Reply box that slides out -->
                                                <div class="collapse mt-2" id="@("collapseExample" + c.Id)">
                                                    <div class="card card-body">
                                                        <div class="comment-form d-flex align-items-center">
                                                            <div class="flex-shrink-0">
                                                                <div class="avatar avatar-sm rounded-circle">
                                                                    <img class="avatar-img" src="https://images.pexels.com/photos/91227/pexels-photo-91227.jpeg?auto=compress&cs=tinysrgb&crop=faces&fit=crop&h=200&w=200" alt="">
                                                                </div>
                                                            </div>
                                                            <div class="flex-grow-1 ms-2 ms-sm-3">
                                                                <form onsubmit="return false">
                                                                    <textarea @bind="inputedComment" class="form-control py-0 px-1 border-0" rows="1" placeholder="Reply to @c.UserName..." style="resize: none;"></textarea>
                                                                    <button @onclick="@(() => AddResponse(c.Id))" class="btn btn-primary mt-5">Add Comment</button>
                                                                </form>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            @if (c.Replies.Count() > 0)
                                            {
                                                <div class="comment-replies mb-5 p-3 mt-3 rounded">
                                                    <h6 class="comment-replies-title text-muted text-uppercase"> replies</h6>
                                                    @foreach (var r in c.Replies)
                                                    {

                                                        <div class="reply d-flex">
                                                            <div class="flex-shrink-0">
                                                                <div class="avatar avatar-sm rounded-circle">
                                                                    <img class="avatar-img" src="https://images.unsplash.com/photo-1501325087108-ae3ee3fad52f?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=f7f448c2a70154ef85786cf3e4581e4b" alt="">
                                                                </div>
                                                            </div>
                                                            <div class="flex-grow-1 ms-2 ms-sm-3">
                                                                <div class="reply-meta d-flex align-items-baseline">
                                                                    <h6 class="mb-0 me-2">@r.UserName</h6>
                                                                    <span class="text-muted">2d</span>
                                                                </div>
                                                                <div class="reply-body">
                                                                    @r.Content
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
                @if (user is not null)
                {
                    <div class="row justify-content-center mb-5">
                        <div class="col-lg-10">
                            <div class="comment-form d-flex align-items-center">
                                <div class="flex-shrink-0">
                                    <div class="avatar avatar-sm rounded-circle">
                                        <img class="avatar-img" src="https://images.pexels.com/photos/91227/pexels-photo-91227.jpeg?auto=compress&cs=tinysrgb&crop=faces&fit=crop&h=200&w=200" alt="">
                                    </div>
                                </div>
                                <div class="flex-grow-1 ms-2 ms-sm-3">
                                    <form onsubmit="return false">
                                        <textarea @bind="inputedComment" class="form-control py-0 px-1 border-0" rows="1" placeholder="Start writing..." style="resize: none;"></textarea>
                                        <button @onclick="@(() => AddResponse())" class="btn btn-primary mt-5">Add Comment</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <p>Log in to leave a comment</p>
                }
            </div>
        </div>

    }
    else
    {
        <p>Loading...</p>
    }
</div>

@code {
    [Parameter]
    public int blogId { get; set; }

    public BlogDTO? blog { get; set; }

    public string ParsedContent { get; set; } = "no content";

    public List<CommentDTO> AllComments { get; set; }

    public List<CommentDTO> TopLevelComments { get; set; }

    public string inputedComment { get; set; }


    UserDTO user { get; set; }



    protected override async Task OnInitializedAsync()
    {
        blog = await service.GetBlog(blogId);
        AllComments = blog.Comments;

        TopLevelComments = AllComments.Where(x => x.ReplyId is null).ToList();


        if (userState.User.Identity.IsAuthenticated)
        {
            var authId = userState.User.Claims.FirstOrDefault(x => x.Type == "authId").Value;
            user = await userService.GetAuthUser(authId);
        }
    }

    public async Task AddResponse()
    {
        AddCommentRequest newRequest = new()
            {
                content = inputedComment,
                contentId = blogId,
                userGuid = user.Guid,
            };
        await commentService.AddBlogComment(newRequest);
        inputedComment = "";
        blog = await service.GetBlog(blogId);
        AllComments = blog.Comments;
    }

    public void AddResponse(int replyId)
    {
        AddCommentRequest newRequest = new()
            {
                content = inputedComment,
                contentId = blogId,
                userGuid = user.Guid,
                replyId = replyId,
            };
        commentService.AddBlogComment(newRequest);
    }
}
