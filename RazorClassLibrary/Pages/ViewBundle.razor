@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Stripe

@inject IBundleService bundleService
@inject IUserService userService
@inject IStripeService stripeService
@inject NavigationManager navManager

@attribute [Authorize]

@code {
    [Parameter]
    public int bundleId { get; set; }
    public string? errorMessage { get; set; } = "";
    public string? authId { get; set; }
    public string? paymentIntent { get; set; } = "";
    public bool Success { get; set; } = false;

    [CascadingParameter]
    Task<AuthenticationState>? AuthStateTask { get; set; }

    public BundleDTO? selectedBundle { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (AuthStateTask is null)
        {
            throw new Exception("BWAH");
        }
        var authState = await AuthStateTask;

        try
        {
            authId = authState.User.Claims.FirstOrDefault(x => x.Type == "authId")!.Value;

            if (authId is null)
            {
                throw new Exception("User was not found");
            }

            var userId = (await userService.GetAuthUser(authId))!.Id;
            var maybeTheirBundle = await bundleService.GetBundle(bundleId);

            
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
