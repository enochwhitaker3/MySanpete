name: MySanpete Class Server Deployment Pipeline
on: 
  push:
    branches: [master] 
jobs:
  DeployingPipeline:
    runs-on: MySanpete
    steps:
      - name: "Stop old compose"
        run: |
            cd ./MySanpete
            docker compose down -v 
            cd ../
            rm -rf ./MySanpete
        working-directory: ./../../../../
      - name: "Clone repo"
        run: | 
            git clone https://${{secrets.MYSANPETEPAT}}@github.com/enochwhitaker3/MySanpete.git
        working-directory: ./../../../../
      - name: "Lint and Build Warnings"
        run: |
            dotnet build --warnaserror
            dotnet format --verify-no-changes --no-restore
        working-directory: ./../../../../MySanpete/MySanpeteWeb
      - name: "Integration tests"
        run: |
            dotnet test
        working-directory: ./../../../../MySanpete/MySanpeteTests
      - name: "Build and add tag"
        run: |
            docker build -t 144.17.92.12:5000/codebras/mysanpete:1 .

            docker push 144.17.92.12:5000/codebras/mysanpete:1
            
            kubectl -n codebras delete configmap my-sanpete-postgres-init || true
            kubectl -n codebras create configmap my-sanpete-postgres-init --from-file=20240328.06.25.21.sql
            
            cd ./Telemetry
            #kubectl delete -f Kubernetes/

            for file in ./Kubernetes/*; do
                # Apply the file using kubectl
                echo "Applying $file"
                cat $file | envsubst | kubectl apply -f -
            done
 
        working-directory: ./../../../../MySanpete
      - name: "Not making an env file"
        run: | 
          echo "Domain=${{secrets.DOMAIN}} 
          ClientId=${{ secrets.CLIENTID }} 
          STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }} 
          MapKey=${{ secrets.MAPKEY }}
          DUCKDNS=${{ secrets.DUCKDNS }}" > .env
        working-directory: ./../../../../MySanpete
      - name: "Run docker-compose up"
        id: compose
        run: |
          docker compose up --build -d
        working-directory: ./../../../../MySanpete
      - name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        if: failure()
        with:
          webhook_url: ${{ secrets.TEAMS_WEBHOOK }}
          overwrite: "{title: `THE SERVER IS DOWN! Check it here :) -> ${workflow_link}`}"